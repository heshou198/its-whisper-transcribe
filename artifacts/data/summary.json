[
    {
        "title": "\"Introduction to MIT's Course 600: Computer Science and Programming\"",
        "content": "Course 600: Introduction to Computer Science & Programming taught by Professors Grimson & Guttag. Content under a Creative Commons license, it teaches computational thinking, coding, and computational problem-solving. Ideal for beginners to programming."
    },
    {
        "title": "\"Mapping Scientific Problems into a Computational Framework: An Introductory Course\"",
        "content": "The course taught latest skill of mapping scientific problems into computational framework. Course details include two lectures, one recitation each week, and nine hours of class work primarily involving Python programming. Course uses external libraries/code."
    },
    {
        "title": "\"Course Overview and Expectations\"",
        "content": "Understand course materials and codes. Two quizzes, dates TBA, conflicts to be communicated. Special needs noted 2 weeks prior to quiz. Quizzes are open book/notes. Problem sets 55% of grade, quizzes 45% including final. Course mainly paperless via website. Recitations on Fridays."
    },
    {
        "title": "\"Course Guidelines: Sign Up, Optional Textbook, Attendance, and the Importance of Note-Taking\"",
        "content": "Course requires sign-ups for recitation, optional Python textbook, attendance not mandatory but participation encouraged, no set course text, reading is expected but not fully covered in materials, low TA priority for text/lecture related questions, responsible behavior needed, notes not provided and students encouraged to self-note-take for retention."
    },
    {
        "title": "\"Importance of Class Participation, Note Taking, and Attendance in Lectures and Recitations\"",
        "content": "Lecture handouts contain code examples; staff aid learning but won't answer easily Google-able questions; classes recorded for OpenCourseWare; recitation attendance expected; established rules must be understood."
    }
]